testing
  module
    reqs
    pre - ok
    blank - ok
    full - ok
  package
    reqs
    pre - 
    blank - 
    full - 
  cli
    reqs
    pre - 
    blank - 
    full - 


TODO: what to do with snippets.txt? do we need it?
TODO: test README instructions for modtest - latest/clone/ununstall (and check for upper/lowercase in names)
TODO: metadata.py: get freedesktop format locations for exec/icon
TODO: metadata consts to dunders - use find/replace
TODO: spellcheck
TODO: restructure docstrings - https://www.datacamp.com/tutorial/docstrings-python

TODO: put version num in pyplate readme/update value in misc/settings.json
should we also put other stuff there? or is that getting too close to a "make PyPlate
using PyPlate" thing?


NEXT: make py deps have values that are versions (=>3.10) etc for pyproject.toml?
NEXT: figure out what to do with install/uninstall - PyInstaller? Inetallerator?
NEXT: conf files from json to toml, add comments
NEXT: README: need to figure out if Installerator/Configurator are actually deps
NEXT: README: if there is a file in misc starting with 'screenshot', uncomment that line in README
what to do about placeholder file? and file ext?
NEXT: recurse code in pyplate/metadata similar... can we combine?
NEXT: make checklist as html/interactive
NEXT: change all header date to version ???
NEXT: check cspell
NEXT: run every f-ing linter
NEXT: inverstigate pyinstaller https://pyinstaller.org/en/stable/requirements.html


DONE: why does PP_SHORT_DESC/PP_VERSION change in misc/empty_main.py?
DONE: __PP_NAME_BIG__ in empty_main.py? can we live with one error?
DONE: in metadata.json, make py deps into dict and add links for README
DONE: check _split_quote in toml/install
DONE: gui categories have commas in file, split on comma and join with semicolon
DONE: finish argparse test to see if we can count args needed vs. args given
DONE: put recursion blacklist of project in settings.json (will need default in pyplate)
DONE: Module/Package: get rid of import tests after ensuring __init__.py works as expected
DONE: metadata.py: metadata's own headers not replaced as it is in misc/
DONE: metadata.py shows tags in README that are ok (__PP_MOD_START etc)
DONE: put blacklist back in for recursing (easier to maintain/move to agnostic)
DONE: versionator script 
DONE: add argparse to empty_exe.py
DONE: some sort of script to go back after and check that all reps are done
DONE: keep. .py ext in pyplate/project
DONE: initial filename in header of first src file (src/modtest - modtest.py)
DONE: what about exec/icon paths in .desktop?
DONE: _replace_headers could be done better with regex
DONE: for pkg type, make sure all submodule names are in __init__.py

check readme for install instructions 
one has big name, one has small name for tar.gz

remove some exts from executables after installing
(makes them easier/more compliant to call from cmd line)

Use pyplate to make a project called pymaker
Install pymaker like a CLI

move pyplate to /usr/bin so we can call it from anywhere
add param to set location of project

try to use more list/dict comprehensions
try to reduce re flags

Check that first line of docstring matches comment block
CHeck that last line of docstring ends w/ a period

check for docstrings - other linter? pydocstyle?
docstring types have params wrapped in parens, not brackets
where do we use brackets?

'function' not in a class
'method' in a class

CLI/GUI: what files to add to install.py when copying
(i.e. apps/cli need to copy files to ~/.cyclopticnerve/proj/app and ~/.cyclopticnerve/proj/app/gui)

Change log should be cumulative with an entry for each version number and date 
of release
Still working on this - need to compare tags but no tags in dev
Can't compare tags in main as changelog will be modified after tag is added




when creating a CLI or GUI app, after creating venv, download and install 
installerator and configurator and build and pylama
default install script should be modified by pyplate to download and install 
installator and configurator in the prerequisites
Add pip install from GitHub instructions to readme
How to know if we are using the latest version of pyplate, installer and 
configurator
pyproject deps should include inst/cfg for gui/cli but they need to be in pyPI
pyproject.toml should automatically add configurator and installerator for 
cli/gui apps

upload to testpypi/pypi
$ twine upload -r testpypi dist/*
$ twine upload dist/*

install from testpypi/pypi
$ python3 -m pip install -i https://test.pypi.org/simple/__PP_NAME_BIG__
$ python3 -m pip install __PP_NAME_BIG__

install from github
https://packaging.python.org/en/latest/tutorials/installing-packages/#id23
python3 -m pip install git+https://github.com/cyclopticnerve/__PP_NAME_BIG__
requirements? pip install -r requirements.txt

python3 -m pip install -e git+https://github.com/cyclopticnerve/__PP_NAME_BIG__.git#egg=__PP_NAME_BIG__         # from default branch
python3 -m pip install -e git+https://github.com/cyclopticnerve/__PP_NAME_BIG__.git@maine#egg=__PP_NAME_BIG__   # from specific branch
